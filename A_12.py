class AlphabetLanguageDetector:
    def __init__(self):
        self.language_characters_set = {

            "en": set("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"),
            "hi": set("рдЕрдЖрдЗрдИрдЙрдКрдЛрдПрдРрдУрдФрдХрдЦрдЧрдШрдЩрдЪрдЫрдЬрдЭрдЮрдЯрдардбрдврдгрддрдерджрдзрдирдкрдлрдмрднрдордпрд░рд▓рд╡рд╢рд╖рд╕рд╣" + "реНрд╛рд┐реАреБреВреГреДреЕреЖреЗреИреЙреКреЛреМреРрдВрдГрдБ"),
            "bn": set("ржЕржЖржЗржИржЙржКржЛржПржРржУржФржХржЦржЧржШржЩржЪржЫржЬржЭржЮржЯржаржбржвржгрждржержжржзржиржкржлржмржнржоржпрж░рж▓рж╢рж╖рж╕рж╣" + "рзНрж╛рж┐рзАрзБрзВрзГрзДрзЗрзИрзЛрзМ" + "рзОржВржГржБ"),


            "ta": set("роЕроЖроЗроИроЙроКроОроПроРроТроУроФроХроЩроЪроЮроЯрогродроиройрокрооропро░ро▓ро╡ро┤ро│ро╖ро╕ро╣" + "ро╛ро┐рпАрпБрпВрпГрпДрпЖрпЗрпИрпКрпЛрпМрпНрпЧ"),
            "te": set("р░Ер░Жр░Зр░Ир░Йр░Кр░Лр░Ор░Пр░Рр░Тр░Ур░Фр░Хр░Цр░Чр░Шр░Щр░Ър░Ыр░Ьр░Эр░Юр░Яр░ар░бр░вр░гр░др░ер░жр░зр░ир░кр░лр░мр░нр░ор░пр░░р░▓р░╡р░╢р░╖р░╕р░╣" + "р░╛р░┐р▒Ар▒Бр▒Вр▒Гр▒Др▒Жр▒Зр▒Ир▒Кр▒Лр▒Мр▒Нр▒Хр▒Цр▒Шр▒Щр▒Ър▒Ыр▒Ьр▒Эр▒Юр▒Яр▒ар▒б"),

            "or": set("рмЕрмЖрмЗрмИрмЙрмКрмЛрмПрмРрмУрмФрмХрмЦрмЧрмШрмЩрмЪрмЫрмЬрмЭрмЮрмЯрмармбрмврмгрмдрмермжрмзрмирмкрмлрммрмнрмормпрм░рм▓рм╡рм╢рм╖рм╕рм╣" + "рм╛рм┐рнАрнБрнВрнГрнДрнЗрнИрнЛрнМрнНрм╝"),
            "gu": set("ркЕркЖркЗркИркЙркКркЛркПркРркУркФркХркЦркЧркШркЩркЪркЫркЬркЭркЮркЯркаркбрквркгркдркеркжркзркирккрклркмркнркоркпрк░рк▓рк╡рк╢рк╖рк╕рк╣" + "рк╛рк┐рлАрлБрлВрлГрлДрлЕрлЖрлЗрлИрлЙрлКрлЛрлМрлНрлХрлЦрлЧрлШрлЩрлЪрлЫрлЬрлЭрлЮрлЯ"),
            "pa": set("риЕриЖриЗриИриЙриКриЛриПриРриУриФриХриЦриЧриШриЩриЪриЫриЬриЭриЮриЯриарибривригридриерижризриирикрилримринриорипри░ри▓ри╡ри╢ри╢ри╕ри╣" + "ри╛ри┐рйАрйБрйВрйЗрйИрйЛрйМрйНрип"),
            "ml": set("р┤Ер┤Жр┤Зр┤Ир┤Йр┤Кр┤Лр┤Ор┤Пр┤Рр┤Тр┤Ур┤Фр┤Хр┤Цр┤Чр┤Шр┤Щр┤Ър┤Ыр┤Ьр┤Эр┤Юр┤Яр┤ар┤бр┤вр┤гр┤др┤ер┤жр┤зр┤ир┤кр┤лр┤мр┤нр┤ор┤пр┤░р┤▓р┤╡р┤╢р┤╖р┤╕р┤╣" + "р┤╛р┤┐р╡Ар╡Бр╡Вр╡Гр╡Др╡Жр╡Зр╡Ир╡Кр╡Лр╡Мр╡Нр╡Ор╡Ч"),
            "kn": set("р▓Ер▓Жр▓Зр▓Ир▓Йр▓Кр▓Лр▓Ор▓Пр▓Рр▓Тр▓Ур▓Фр▓Хр▓Цр▓Чр▓Шр▓Щр▓Ър▓Ыр▓Ьр▓Эр▓Юр▓Яр▓ар▓бр▓вр▓гр▓др▓ер▓жр▓зр▓ир▓кр▓лр▓мр▓нр▓ор▓пр▓░р▓▓р▓╡р▓╢р▓╖р▓╕р▓╣" + "р▓╛р▓┐р│Ар│Бр│Вр│Гр│Др│Жр│Зр│Ир│Кр│Лр│Мр│Нр▓Хр│Ц"),

            "ru": set("╨░╨▒╨▓╨│╨┤╨╡╤С╨╢╨╖╨╕╨╣╨║╨╗╨╝╨╜╨╛╨┐╤А╤Б╤В╤Г╤Д╤Е╤Ж╤З╤И╤Й╤К╤Л╤М╤Н╤О╤П"),
            "ja": set("уБВуБДуБЖуБИуБКуБЛуБНуБПуБСуБУуБХуБЧуБЩуБЫуБЭуБЯуБбуБдуБжуБиуБкуБлуБмуБнуБоуБпуБ▓уБ╡уБ╕уБ╗уБ╛уБ┐уВАуВБуВВуВДуВЖуВИуВЙуВКуВЛуВМуВНуВПуВТуВУуВвуВдуВжуВиуВкуВлуВнуВпуВ▒уВ│уВ╡уВ╖уВ╣уВ╗уВ╜уВ┐уГБуГДуГЖуГИуГКуГЛуГМуГНуГОуГПуГТуГХуГШуГЫуГЮуГЯуГауГбуГвуГдуГжуГиуГйуГкуГлуГмуГнуГпуГ▓уГ│"),
            "el": set("═░═▒═▓═│═┤═╡═╢═╖═║═╗═╝═╜═╛═┐╬Д╬Е╬Ж╬З╬И╬Й╬К╬М╬О╬П╬Р╬С╬Т╬У╬Ф╬Х╬Ц╬Ч╬Ш╬Щ╬Ъ╬Ы╬Ь╬Э╬Ю╬Я╬а╬б╬г╬д╬е╬ж╬з╬и╬й╬к╬л╬м╬н╬о╬п╬░╬▒╬▓╬│╬┤╬╡╬╢╬╖╬╕╬╣╬║╬╗╬╝╬╜╬╛╬┐╧А╧Б╧В╧Г╧Д╧Е╧Ж╧З╧И╧Й╧К╧Л╧М╧Н╧О╧П╧Р╧С╧Т╧У╧Ф╧Х╧Ц╧Ч╧Ш╧Щ╧Ъ╧Ы╧Ь╧Э╧Ю╧Я╧а╧б╧в╧г╧д╧е╧ж╧з╧и╧й╧к╧л╧м╧н╧о╧п╧░╧▒╧▓╧│╧┤╧╡╧╢╧╖╧╕╧╣╧║╧╗╧╝╧╜╧╛╧┐"),
            "ss1": set("`~!@#%^&*(){}[]\\|;:',.<>/?")

            # Add more languages as needed
        }


        self.language_code_1 = {"en": "English", "hi": "Hindi", "bn": "Bengali", "ta": "Tamil", "te": "Telugu", "or": "Odia", "gu": "Gujarati", "pa": "Punjabi", "ml": "Malayalam", "kn": "Kannada", "ru": "Russian", "ja": "Japanese", "el": "Greek", "ss1": "Symbol 1"}       

        self.language_code_2 = {
            "en": "English",
            "hi": "рд╣рд┐рдиреНрджреА",
            "bn": "ржмрж╛ржВрж▓рж╛",
            "ta": "родрооро┐ро┤рпН",
            "te": "р░др▒Жр░▓р▒Бр░Чр▒Б",
            "or": "рмУрмбрм╝рм┐рмЖ",
            "gu": "ркЧрлБркЬрк░рк╛ркдрлА",
            "pa": "рикрй░риЬри╛римрйА",
            "ml": "р┤ор┤▓р┤пр┤╛р┤│р┤В",
            "kn": "р▓Хр▓ир│Нр▓ир▓б",
            "ru": "╨а╤Г╤Б╤Б╨║╨╕╨╣",
            "ja": "цЧецЬмшкЮ",
            "el": "╬Х╬╗╬╗╬╖╬╜╬╣╬║╬м",
            "ss1": "Symbol 1ЁЯНМ"}




    def detect_language(self, text):
        detected_languages = []
        for language, character_set in self.language_characters_set.items():
            if any (letter in character_set for letter in text):
                detected_languages.append(language)
        return detected_languages
        # return detected_languages if detected_languages else ["No language Found "]


    def print_detected_languages(self, text):
        detected_languages = AlphabetLanguageDetector().detect_language(text=text)
        print(detected_languages)

        language_count = len(detected_languages)
        full_name = AlphabetLanguageDetector().language_code_1 #To see the full name in output print

        if language_count == 0:
            print("No Languages Found тЭМ")

        elif language_count == 1:
            language_name = full_name.get(detected_languages[0], 'Unknown Full Form')
            print(f"One Language Found: {language_name}")

        elif language_count == 2:
            language_names = [full_name.get(lang, 'Unknown Full Form') for lang in detected_languages]
            print(f"Two Languages Found: {', '.join(language_names)}")

        elif language_count == 3:
            language_names = [full_name.get(lang, 'Unknown Full Form') for lang in detected_languages]
            print(f"3 Languages Found: {', '.join(language_names)}")

        elif language_count > 3:
            language_names = [full_name.get(lang, 'Unknown Full Form') for lang in detected_languages]
            print(f"{language_count} Number of Languages Found: {', '.join(language_names)}")

        else:
            print("It can do Multiple Tasks")






if __name__ == "__main__":

    text1 = f"kjhрж░ржкрзБржкрж░"


    detected_languages = AlphabetLanguageDetector().detect_language(text=text1)
    print(detected_languages)

    print_detected_languages = AlphabetLanguageDetector().print_detected_languages(text=text1)
    